{"version":3,"sources":["components/InputControl.js","components/SelectIngredients.js","components/FormModalEdit.js","components/ModalBlock.js","components/TableIngridients.js","components/Content.js","components/Cards.js","API/api.js","components/Title.js","components/FromModalButtonAdd.js","components/ModalButtonAdd.js","components/ButtonAdd.js","App.js","index.js"],"names":["BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","borderColor","boxShadow","InputBase","useStyles","makeStyles","inputSum","margin","width","minWidth","inputIngridient","InputControl","newIngridients","index","changeIngredients","classes","FormControl","className","InputLabel","htmlFor","id","value","name","onChange","event","target","size","main","textAlign","button","SelectIngredients","Grid","container","justify","map","item","direction","alignItems","style","key","Box","onClick","splice","deleteIngridient","Button","variant","color","push","shadows","maxHeight","overflow","inputForm","textRecipe","display","form","flexDirection","header","justifyContent","flexWrap","FormModalEdit","React","memo","open","time","changeName","changeTime","changeRecipe","recipe","addDish","Fade","in","TextField","error","Boolean","length","label","helperText","type","inputProps","min","max","step","multiline","rows","modal","ModalBlock","img","dish","dishList","setNewDish","handleClose","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","date","newDish","title","Date","getDate","getMonth","getFullYear","timeCooking","ingredients","unshift","table","tableHeader","tableRow","mainTable","TableIngridients","menu","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","buttonIcon","marginLeft","cardSize","height","gridList","gridListRecipe","wordWrap","overflowX","cooking","marginBottom","maxWidth","Content","page","changeImg","deleteDish","handleOpen","setCurrentDish","CardContent","Typography","Tooltip","aria-label","Fab","ingridientsCopy","JSON","stringify","parse","GridList","Cards","useState","setPage","filterArr","filter","Card","CardMedia","alt","image","CardActions","Pagination","count","foodList","Title","FormModalButtonAdd","createNewRecipe","setImage","ColorButton","getContrastText","purple","ButtonAdd","forwardRef","ref","setOpen","ModalButtonAdd","App","currentDish","useEffect","data","localStorage","getItem","setItem","Container","i","xs","sm","lg","getMilliseconds","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad3a92fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { InputLabel, FormControl, InputBase } from '@material-ui/core';\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  inputSum: {\r\n    margin: theme.spacing(1),\r\n    width: '30%',\r\n    minWidth: '55px',\r\n  },\r\n  inputIngridient: {\r\n    minWidth: '95px',\r\n    width: '50%',\r\n    margin: theme.spacing(1),\r\n  }\r\n}));\r\n\r\nexport const InputControl = ({\r\n  newIngridients,\r\n  index,\r\n  changeIngredients\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.inputIngridient}>\r\n        <InputLabel htmlFor=\"demo-customized-textbox\">\r\n          Ингредиент\r\n        </InputLabel>\r\n        <BootstrapInput\r\n          id=\"demo-customized-textbox\"\r\n          value={newIngridients[index].name}\r\n          onChange={event=>{\r\n            newIngridients[index].name = event.target.value\r\n            changeIngredients([...newIngridients])\r\n          }}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.inputSum}>\r\n        <InputLabel htmlFor=\"demo-customized-textbox\">\r\n          Вес\\шт\r\n        </InputLabel>\r\n        <BootstrapInput\r\n          id=\"demo-customized-textbox\"\r\n          value={newIngridients[index].size}\r\n          onChange={event=>{\r\n            newIngridients[index].size = event.target.value\r\n            changeIngredients([...newIngridients])\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Box, Button } from '@material-ui/core';\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\nimport '../index.css';\r\nimport '../styles/iconDelete.css';\r\nimport { InputControl } from './InputControl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  main: {\r\n    textAlign: 'center'\r\n  },\r\n  button: {\r\n    margin: '10px auto',\r\n  },\r\n}));\r\n\r\nconst SelectIngredients = ({newIngridients, changeIngredients}) => {\r\n  const classes = useStyles();\r\n\r\n  const deleteIngridient = (index) => {\r\n    newIngridients.splice(index,1)\r\n    changeIngredients([...newIngridients])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.main} container justify=\"center\">\r\n        {newIngridients.map((item, index) => (\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            style={{\r\n            width:\"315px\",\r\n            margin: '0px 15px'\r\n            }}\r\n            key={index}\r\n          >\r\n            <InputControl\r\n              newIngridients={newIngridients}\r\n              index={index}\r\n              changeIngredients={changeIngredients}\r\n            />\r\n            <Box className=\"boxDelete\">\r\n              <DeleteForeverRoundedIcon className=\"buttonDelete\" onClick={()=>deleteIngridient(index)}/>\r\n            </Box>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={()=> {\r\n          newIngridients.push({name:'', size:''})\r\n          changeIngredients([...newIngridients])\r\n        }}\r\n      >\r\n        Добавить ингредиентов\r\n      </Button>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default SelectIngredients;","import React from 'react';\r\nimport '../index.css';\r\nimport SelectIngredients from './SelectIngredients';\r\nimport { Grid, Button, Fade, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 0),\r\n    width: '50%',\r\n    maxHeight: '600px',\r\n    overflow: 'scroll'\r\n  },\r\n  inputForm: {\r\n    margin: '25px 0',\r\n    width: '210px',\r\n    padding: '5px'\r\n  },\r\n  textRecipe: {\r\n    width: '100%',\r\n    padding: '10px 0',\r\n    marginTop: '15px',\r\n\r\n  },\r\n  button: {\r\n    margin: '10px auto',\r\n    display: 'block'\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'baseline',\r\n    flexWrap: 'wrap'\r\n  }\r\n}));\r\n\r\nexport const FormModalEdit = React.memo(({\r\n  open,\r\n  name,\r\n  time,\r\n  changeName,\r\n  changeTime,\r\n  newIngridients,\r\n  changeIngredients,\r\n  changeRecipe,\r\n  recipe,\r\n  addDish}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fade in={open}>\r\n      <div className={classes.paper}>\r\n        <form className={classes.form}>\r\n          <Grid className={classes.header}>\r\n            <TextField\r\n              className={classes.inputForm}\r\n              error={Boolean(!name.length)}\r\n              id=\"standard-error-helper-text\"\r\n              label=\"Название блюда\"\r\n              value={name}\r\n              helperText={!name.length && \"Должно содержать 2-20 символов\"}\r\n              onChange={(event)=> changeName(event.target.value)}\r\n            />\r\n            <TextField\r\n              className={classes.inputForm}\r\n              error={Boolean(time <=0)}\r\n              label=\"Время приготовления-мин\"\r\n              value={time}\r\n              helperText={time <= 0 && \"Введите время приготовления\"}\r\n              onChange={(event)=> changeTime(event.target.value)}\r\n              type=\"number\"\r\n              inputProps={{ min: \"5\", max: \"500\", step: \"5\" }}\r\n            />\r\n          </Grid>\r\n          <SelectIngredients\r\n            newIngridients={newIngridients}\r\n            changeIngredients={changeIngredients}\r\n          />\r\n          <TextField\r\n            className={classes.textRecipe}\r\n            value={recipe}\r\n            onChange={(event)=>changeRecipe(event.target.value)}\r\n            label=\"Рецепт приготовления:\"\r\n            multiline\r\n            rows=\"6\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            onClick={addDish}\r\n          >\r\n            РЕДАКТИРОВАТЬ\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Fade>\r\n  )\r\n})","import React from 'react';\r\nimport '../index.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FormModalEdit } from './FormModalEdit';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\n\r\nexport const ModalBlock = ({\r\n  name,\r\n  time,\r\n  img,\r\n  newIngridients,\r\n  recipe,\r\n  dish,\r\n  dishList,\r\n  setNewDish,\r\n  handleClose,\r\n  open,\r\n  changeName,\r\n  changeTime,\r\n  changeIngredients,\r\n  changeRecipe}) => {\r\n  const classes = useStyles();\r\n\r\n  const getCurrentData = (date) => {\r\n    return `${date.getDate()}.${date.getMonth()+1}.${date.getFullYear()}`\r\n  }\r\n\r\n  const addDish = () => {\r\n    const newDish = {\r\n      title: name,\r\n      date: getCurrentData(new Date()),\r\n      timeCooking: time,\r\n      ingredients: newIngridients,\r\n      recipe,\r\n      img,\r\n    }\r\n    dish.unshift(newDish)\r\n    setNewDish(dishList)\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n    <FormModalEdit\r\n      newIngridients={newIngridients}\r\n      addDish={addDish}\r\n      changeName={changeName}\r\n      changeTime={changeTime}\r\n      changeIngredients={changeIngredients}\r\n      changeRecipe={changeRecipe}\r\n      recipe={recipe}\r\n      open={open}\r\n      name={name}\r\n      time={time}\r\n    />\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    padding: '0 25px 5px',\r\n  },\r\n  tableHeader: {\r\n    padding: '0 0 15px 0'\r\n  },\r\n  tableRow: {\r\n    padding: '5px 55px 5px 45px'\r\n  },\r\n  mainTable: {\r\n    width: '95%'\r\n  }\r\n});\r\n\r\nconst TableIngridients = ({menu}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer>\r\n      <Table className={classes.mainTable}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.table}>ингредиенты</TableCell>\r\n            <TableCell className={classes.table} align=\"right\">количество</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {menu.ingredients.map(row => (\r\n          <TableRow key={row.name}>\r\n            <TableCell component=\"th\" scope=\"row\" className={classes.tableRow}>\r\n              {row.name}\r\n            </TableCell>\r\n            <TableCell className={classes.tableRow} align=\"right\">{row.size}</TableCell>\r\n          </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default TableIngridients","import React from 'react';\r\nimport { GridList, Box, Typography, Fab, Tooltip, CardContent, Grid } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport TableIngridients from './TableIngridients';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  recipe: {\r\n    padding: '0 0 10px 0'\r\n  },\r\n  buttonIcon: {\r\n    marginLeft: '10px'\r\n  },\r\n  cardSize: {\r\n    height: '680px'\r\n  },\r\n  gridList: {\r\n    height: '150px',\r\n  },\r\n  gridListRecipe: {\r\n    height: '100px',\r\n    wordWrap: 'break-word',\r\n    overflowX: 'auto',\r\n    marginTop: '10px'\r\n  },\r\n  cooking: {\r\n    marginBottom: '15px'\r\n  },\r\n  title: {\r\n    height: '92px',\r\n    maxWidth: '75%',\r\n    overflow: 'auto',\r\n    wordWrap: 'break-word'\r\n  }\r\n}));\r\n\r\nconst Content = ({\r\n  dish,\r\n  page,\r\n  menu,\r\n  changeImg,\r\n  deleteDish,\r\n  changeTime,\r\n  handleOpen,\r\n  changeRecipe,\r\n  changeIngredients,\r\n  setCurrentDish,\r\n  changeName}) => {\r\n    const classes = useStyles();\r\n  return (\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.tableHeader}\r\n      >\r\n      <Typography variant=\"h4\" component=\"h2\" className={classes.title}>\r\n        <span className=\"title_dish\">\r\n          {menu.title}\r\n        </span>\r\n      </Typography>\r\n        <Grid>\r\n          <Tooltip title=\"Редактировать\" aria-label=\"add\">\r\n            <Fab color=\"primary\" size=\"small\" onClick={()=> {\r\n              handleOpen()\r\n              changeName(menu.title)\r\n              changeTime(menu.timeCooking)\r\n              const ingridientsCopy = JSON.stringify(menu.ingredients)\r\n              changeIngredients(JSON.parse(ingridientsCopy))\r\n              changeRecipe(menu.recipe)\r\n              setCurrentDish(dish)\r\n              changeImg(menu.img)\r\n            }}>\r\n              <EditIcon />\r\n            </Fab>\r\n          </Tooltip>\r\n          <Tooltip title=\"Удалить рецепт\" aria-label=\"add\">\r\n            <Fab\r\n              color=\"secondary\"\r\n              aria-label=\"edit\"\r\n              size=\"small\"\r\n              className={classes.buttonIcon}\r\n            >\r\n              <DeleteForeverIcon onClick={()=> deleteDish(page-1)}/>\r\n            </Fab>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n      <Typography component=\"h3\" >\r\n        Дата создания рецепта - {menu.date}\r\n      </Typography>\r\n      <Typography component=\"h3\" className={classes.cooking}>\r\n        Время приготовления - {menu.timeCooking} минут\r\n      </Typography>\r\n      <GridList className={classes.gridList} style={{margin: '0'}}>\r\n          <TableIngridients menu={menu}/>\r\n      </GridList>\r\n      <Box className={classes.gridListRecipe} style={{height: 'content'}}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          component=\"h3\"\r\n          className={classes.recipe}\r\n        >\r\n          Как готовить:\r\n          <br/>\r\n        </Typography>\r\n        {menu.recipe}\r\n      </Box>\r\n    </CardContent>\r\n  )\r\n}\r\n\r\nexport default Content;","import React, {useState, Fragment} from 'react';\r\nimport '../index.css';\r\nimport {CardActions, CardMedia, Card} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Content from './Content';\r\n\r\nexport const Cards = ({\r\n  dish,\r\n  changeImg,\r\n  dishList,\r\n  setNewDish,\r\n  changeTime,\r\n  handleOpen,\r\n  changeRecipe,\r\n  changeIngredients,\r\n  setCurrentDish,\r\n  changeName}) => {\r\n  const [page, setPage] = useState(1)\r\n\r\n  const deleteDish = (index) => {\r\n    if (dish.length === 1) {\r\n      const filterArr = dishList.filter(item =>item !== dish)\r\n      setNewDish([...filterArr])\r\n\r\n      return\r\n    }\r\n    dish.splice(index, 1)\r\n    setNewDish([...dishList])\r\n\r\n    if(index === dish.length) {\r\n      setPage(dish.length)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card >\r\n      {dish.filter((item, index) => index === page-1).map((menu, index) => (\r\n        <Fragment key={index}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt={menu.title}\r\n            height=\"220\"\r\n            image={menu.img}\r\n            title={menu.title}\r\n          />\r\n          <Content\r\n            page={page}\r\n            dish={dish}\r\n            changeImg={changeImg}\r\n            deleteDish={deleteDish}\r\n            menu={menu}\r\n            changeTime={changeTime}\r\n            handleOpen={handleOpen}\r\n            changeRecipe={changeRecipe}\r\n            changeIngredients={changeIngredients}\r\n            setCurrentDish={setCurrentDish}\r\n            changeName={changeName}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n      <CardActions>\r\n        <Pagination\r\n          count={dish.length}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          page={page}\r\n          onChange={(event, value) => setPage(value)}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","export const foodList = [[{\r\n  title: 'Лазанья классическая',\r\n  date: '6.02.2019',\r\n  timeCooking: 40,\r\n  ingredients: [\r\n    {name: 'Мясной фарш', size: '600 г'},\r\n    {name: 'Соус болоньезе', size: '600 г'},\r\n    {name: 'Сливочное масло', size: '60г'},\r\n    {name: 'Молоко', size: '750 г'},\r\n    {name: 'Твердый сыр', size: '500 г'},\r\n    {name: 'Пшеничная мука', size: '2,5 столовые ложки'}],\r\n  recipe: 'В сотейник положить сливочное масло и 2 ложки растительного масла, растопить. Постепенно добавлять муку и размешивать так, чтобы не оставалось комочков. На сковороде раскалить оливковое масло. Добавить мясной фарш (лучше свинина+телятина). Фарш жарить до полуготовности. Влить в него соус болоньезе, посолить и поперчить по вкусу. Духовку разогреть до 180 градусов. Форму смазать сливочным маслом. На дно вылить немного соуса бешамель, чуть-чуть, только чтобы покрыть дно.',\r\n  img: 'https://img02.rl0.ru/eda/-x900i/s2.eda.ru/StaticContent/Photos/120131082527/130715011534/p_O.jpg'\r\n},\r\n{\r\n  title: 'Лазанья классическая',\r\n  date: '23.08.2018',\r\n  timeCooking: 40,\r\n  ingredients: [\r\n    {name: 'Мясной фарш', size: '600 г'},\r\n    {name: 'Соус болоньезе', size: '600 г'},\r\n    {name: 'Сливочное масло', size: '60г'},\r\n    {name: 'Сухие листы лазаньи', size: '10 штук'},\r\n    {name: 'Твердый сыр', size: '500 г'},\r\n    {name: 'Пшеничная мука', size: '2,5 столовые ложки'}],\r\n  recipe: 'В сотейник положить сливочное масло и 2 ложки растительного масла, растопить. Постепенно добавлять муку и размешивать так, чтобы не оставалось комочков. На сковороде раскалить оливковое масло. Добавить мясной фарш (лучше свинина+телятина). Фарш жарить до полуготовности. Влить в него соус болоньезе, посолить и поперчить по вкусу.',\r\n  img: 'https://img02.rl0.ru/eda/-x900i/s2.eda.ru/StaticContent/Photos/120131082527/130715011534/p_O.jpg'\r\n}],\r\n[{\r\n  title: 'Салат «Цезарь»',\r\n  date: '7.09.2017',\r\n  timeCooking: 30,\r\n  ingredients: [\r\n    {name: 'Зеленый салат', size: '1 пучок'},\r\n    {name: 'Помидоры', size: '1 штука'},\r\n    {name: 'Куриное филе', size: '300 г'},\r\n    {name: 'Белый хлеб', size: '6 кусков'},\r\n    {name: 'Соус «Цезарь»', size: 'по вкусу'}],\r\n  recipe: 'Промыть, просушить и нарвать на небольшие кусочки листья салата, отложить в холодильник. В горячую сковородку положить 1 столовую ложку сливочного масла. После того, как оно полностью расплавится и начнет шипеть, кинуть нарезанный на пластины зубчик чеснока. Куриную грудку нарезать на кусочки приблизительно 1х3 см. Положить в сковороду к чесноку и маслу. Обжаривать на сильном огне приблизительно 10 минут до румяной корочки. Снять с огня. В ту же сковородку добавить еще одну столовую ложку сливочного масла и второй зубчик чеснока. В это время нарезать на небольшие кубики хлеб. Положить в сковороду и обжаривать до румяной корочки. Желательно непрерывно помешивать, чтобы не подгорело. Достать листья салата, туда же положить обжаренную куриную грудку, помидоры, нарезанные тонкой соломкой. Заправить соусом «Цезарь». Перемешать. Сверху положить получившиеся сухарики и натереть сыр.',\r\n  img: 'https://img05.rl0.ru/eda/-x900i/s2.eda.ru/StaticContent/Photos/120131090424/120213190009/p_O.jpg'\r\n},\r\n{\r\n  title: 'Салат «Цезарь»',\r\n  date: '4.09.2017',\r\n  timeCooking: 35,\r\n  ingredients: [\r\n    {name: 'Зеленый салат', size: '1 пучок'},\r\n    {name: 'Куриное филе', size: '300 г'},\r\n    {name: 'Белый хлеб', size: '8 кусков'},\r\n    {name: 'Соус «Цезарь»', size: 'по вкусу'}],\r\n  recipe: 'Промыть, просушить и нарвать на небольшие кусочки листья салата, отложить в холодильник. В горячую сковородку положить 1 столовую ложку сливочного масла. После того, как оно полностью расплавится и начнет шипеть, кинуть нарезанный на пластины зубчик чеснока. Куриную грудку нарезать на кусочки приблизительно 1х3 см. Положить в сковороду к чесноку и маслу. Обжаривать на сильном огне приблизительно 10 минут до румяной корочки. Снять с огня. В ту же сковородку добавить еще одну столовую ложку сливочного масла и второй зубчик чеснока. В это время нарезать на небольшие кубики хлеб. Положить в сковороду и обжаривать до румяной корочки. Желательно непрерывно помешивать, чтобы не подгорело.',\r\n  img: 'https://img05.rl0.ru/eda/-x900i/s2.eda.ru/StaticContent/Photos/120131090424/120213190009/p_O.jpg'\r\n},\r\n\r\n],\r\n[{\r\n  title: 'Омлет с моцареллой',\r\n  date: '2.12.2018',\r\n  timeCooking: 5,\r\n  ingredients: [\r\n    {name: 'Яйцо куриное', size: '3 штуки'},\r\n    {name: 'Помидоры черри', size: '4 штуки'},\r\n    {name: 'Сливочное масло', size: '20 г'},\r\n    {name: 'Сыр моцарелла', size: '50 г'},\r\n    {name: 'Зеленый базилик', size: 'по вкусу'}\r\n  ],\r\n  recipe: 'Яйца смешать с солью и перцем. В сковороде на сливочном масле немного припустить помидоры и залить яйцами. Секунд через двадцать добавить моцареллу, нарезать листья базилика и снять с огня. На одну минуту оставить сковороду остывать, после чего полить оливковым маслом и подавать. ',\r\n  img: 'https://img03.rl0.ru/eda/-x900i/s2.eda.ru/StaticContent/Photos/130829212936/130904175634/p_O.jpg'\r\n},\r\n{\r\n  title: 'Омлет с моцареллой',\r\n  date: '2.10.2018',\r\n  timeCooking: 5,\r\n  ingredients: [\r\n    {name: 'Яйцо куриное', size: '3 штуки'},\r\n    {name: 'Помидоры черри', size: '4 штуки'},\r\n    {name: 'Сливочное масло', size: '20 г'},\r\n    {name: 'Сыр моцарелла', size: '50 г'},\r\n    {name: 'Зеленый базилик', size: 'по вкусу'}\r\n  ],\r\n  recipe: 'Яйца смешать с солью и перцем. В сковороде на сливочном масле немного припустить помидоры и залить яйцами. Секунд через двадцать добавить моцареллу, нарезать листья базилика и снять с огня. На одну минуту оставить сковороду остывать',\r\n  img: 'https://img03.rl0.ru/eda/-x900i/s2.eda.ru/StaticContent/Photos/130829212936/130904175634/p_O.jpg'\r\n},\r\n{\r\n  title: 'Омлет с моцареллой',\r\n  date: '8.10.2018',\r\n  timeCooking: 10,\r\n  ingredients: [\r\n    {name: 'Яйцо куриное', size: '2 штуки'},\r\n    {name: 'Помидоры черри', size: '4 штуки'},\r\n    {name: 'Сливочное масло', size: '20 г'},\r\n    {name: 'Зеленый базилик', size: 'по вкусу'}\r\n  ],\r\n  recipe: 'Яйца смешать с солью и перцем. В сковороде на сливочном масле немного припустить помидоры и залить яйцами. Секунд через двадцать добавить моцареллу, нарезать листья базилика и снять с огня. На одну минуту оставить сковороду остывать',\r\n  img: 'https://img03.rl0.ru/eda/-x900i/s2.eda.ru/StaticContent/Photos/130829212936/130904175634/p_O.jpg'\r\n  }]\r\n]","import React from 'react';\r\nimport '../styles/title.css';\r\n\r\nexport const Title = () => (\r\n  <div className=\"container\">\r\n    <h1 className=\"title\">Кулинарная книга</h1>\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport '../index.css';\r\nimport SelectIngredients from './SelectIngredients';\r\nimport { TextField, Fade, Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 0),\r\n    width: '50%',\r\n    maxHeight: '600px',\r\n    overflow: 'scroll'\r\n  },\r\n  inputForm: {\r\n    marginBottom: '15px',\r\n    width: '210px',\r\n  },\r\n  textRecipe: {\r\n    width: '100%',\r\n    padding: '10px 0',\r\n    marginTop: '15px',\r\n\r\n  },\r\n  button: {\r\n    margin: '10px auto',\r\n    display: 'block'\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'baseline',\r\n  }\r\n}));\r\n\r\nexport const FormModalButtonAdd = React.memo(({\r\n  createNewRecipe,\r\n  open,\r\n  name,\r\n  changeName,\r\n  time,\r\n  changeTime,\r\n  img,\r\n  setImage,\r\n  newIngridients,\r\n  changeIngredients,\r\n  changeRecipe,\r\n  recipe\r\n}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fade in={open}>\r\n      <div className={classes.paper}>\r\n        <form className={classes.form}>\r\n          <Grid className={classes.header} container>\r\n            <TextField\r\n              className={classes.inputForm}\r\n              error={Boolean(!name.length)}\r\n              id=\"standard-error-helper-text\"\r\n              label=\"Название блюда\"\r\n              value={name}\r\n              helperText={!name.length && \"Должно содержать 2-20 символов\"}\r\n              onChange={(event)=> changeName(event.target.value)}\r\n            />\r\n            <TextField\r\n              className={classes.inputForm}\r\n              error={Boolean(time <=0)}\r\n              label=\"Время приготовления-мин\"\r\n              value={time}\r\n              helperText={time <= 0 && \"Введите время приготовления\"}\r\n              onChange={(event)=> changeTime(event.target.value)}\r\n              type=\"number\"\r\n              inputProps={{ min: \"5\", max: \"500\", step: \"5\" }}\r\n            />\r\n            <TextField\r\n              className={classes.inputForm}\r\n              label=\"Фото блюда(ссылка)\"\r\n              value={img}\r\n              onChange={(event)=> setImage(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <SelectIngredients\r\n            newIngridients={newIngridients}\r\n            changeIngredients={changeIngredients}\r\n          />\r\n          <TextField\r\n            className={classes.textRecipe}\r\n            value={recipe}\r\n            onChange={(event)=>changeRecipe(event.target.value)}\r\n            label=\"Рецепт приготовления:\"\r\n            multiline\r\n            rows=\"6\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            onClick={createNewRecipe}\r\n          >\r\n           ДОБАВИТЬ РЕЦЕПТ\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Fade>\r\n  )\r\n})","import React, {useState} from 'react';\r\nimport '../index.css';\r\nimport { FormModalButtonAdd } from './FromModalButtonAdd';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst ModalBlock = ({\r\n  dishList,\r\n  setNewDish,\r\n  open,\r\n  handleClose}) => {\r\n  const [time, changeTime] = useState(0)\r\n  const [name, changeName] = useState(0)\r\n  const [newIngridients, changeIngredients] = useState([])\r\n  const [recipe, changeRecipe] = useState()\r\n  const [img, setImage] = useState()\r\n\r\n  const classes = useStyles();\r\n\r\n  const getCurrentData = (date) => {\r\n    return `${date.getDate()}.${date.getMonth()+1}.${date.getFullYear()}`\r\n  }\r\n\r\n  const createNewRecipe = () => {\r\n    const newDish = {\r\n      title: name,\r\n      date: getCurrentData(new Date()),\r\n      timeCooking: time,\r\n      ingredients: newIngridients,\r\n      recipe,\r\n      img: (img || 'https://99px.ru/sstorage/53/2011/09/tmb_22745_4251.jpg')\r\n    }\r\n\r\n    dishList.unshift([newDish])\r\n    setNewDish([...dishList])\r\n    handleClose()\r\n    changeTime(0)\r\n    changeName('')\r\n    changeIngredients([])\r\n    setImage('')\r\n    changeRecipe('')\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <FormModalButtonAdd \r\n        createNewRecipe={createNewRecipe}\r\n        open={open}\r\n        name={name}\r\n        changeName={changeName}\r\n        time={time}\r\n        changeTime={changeTime}\r\n        img={img}\r\n        setImage={setImage}\r\n        newIngridients={newIngridients}\r\n        changeIngredients={changeIngredients}\r\n        changeRecipe={changeRecipe}\r\n        recipe={recipe}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalBlock;","import React from 'react';\r\nimport '../styles/buttonAdd.css';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport ModalButtonAdd from './ModalButtonAdd';\r\n\r\nconst ColorButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n    '&:hover': {\r\n      backgroundColor: purple[700],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport const ButtonAdd = React.forwardRef(({\r\n  dishList,\r\n  setNewDish,\r\n}, ref) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"button-container\">\r\n      <ColorButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.margin}\r\n        size={\"large\"}\r\n        onClick={handleOpen}\r\n      >\r\n        Создать рецепт\r\n      </ColorButton>\r\n      <ModalButtonAdd \r\n        ref={ref}\r\n        dishList={dishList}\r\n        setNewDish={setNewDish}\r\n        open={open}\r\n        handleClose={handleClose}\r\n      />\r\n    </div>\r\n  )\r\n})\r\n","import React, {useState, useEffect} from 'react';\nimport './index.css';\nimport { ModalBlock } from './components/ModalBlock';\nimport { Cards } from './components/Cards';\nimport {foodList} from './API/api'\nimport {Container, Grid} from '@material-ui/core';\nimport { Title } from './components/Title';\nimport { ButtonAdd } from './components/ButtonAdd';\n\nconst App = () => {\n  const [dishList, setNewDish] = useState(foodList)\n  const [open, setOpen] = React.useState(false);\n\n  const [time, changeTime] = useState(0)\n  const [name, changeName] = useState('')\n  const [newIngridients, changeIngredients] = useState([])\n  const [recipe, changeRecipe] = useState([])\n  const [img, changeImg] = useState('')\n\n  const [currentDish, setCurrentDish] = useState([])\n \n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"menu\");\n    if (data) {\n      setNewDish(JSON.parse(data))\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"menu\", JSON.stringify(dishList))\n  });\n\n  return (\n    <>\n      <Title />\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={3}>\n          {dishList.map((dish, i)=>(\n            <Grid item xs={12} sm={6} lg={4} key={new Date().getMilliseconds+i}>\n              <Cards\n                changeImg={changeImg}\n                dishList={dishList}\n                dish={dish}\n                setNewDish={setNewDish}\n                changeTime={changeTime}\n                changeName={changeName}\n                changeIngredients={changeIngredients}\n                changeRecipe={changeRecipe}\n                setCurrentDish={setCurrentDish}\n                handleOpen={handleOpen}\n              />\n            </Grid>\n          ))}\n        </Grid>\n        <ModalBlock \n          img={img}\n          dish={currentDish}\n          dishList={dishList}\n          setNewDish={setNewDish}\n          changeTime={changeTime}\n          changeName={changeName}\n          changeRecipe={changeRecipe}\n          open={open}\n          newIngridients={newIngridients}\n          recipe={recipe}\n          name={name}\n          time={time}\n          changeIngredients={changeIngredients}\n          handleClose={handleClose}\n        />\n      </Container>\n      <ButtonAdd\n        dishList={dishList}\n        setNewDish={setNewDish}\n      />\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}